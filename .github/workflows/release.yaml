name: Create Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true

  push:
    tags:
      - 'v*'  # 当推送新标签时触发

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: 'Install dependencies'
        run: python -m pip install pandas openpyxl

      - name: Run src/build.py
        run: python src/build.py -v

      - name: Generate checksums
        run: |
          sha256sum WeaponUseCounterBlocker_EN-US.zip > WeaponUseCounterBlocker_EN-US.zip.sha256
          sha256sum WeaponUseCounterBlocker_ZH-Hans.zip > WeaponUseCounterBlocker_ZH-Hans.zip.sha256
          sha256sum WeaponUseCounterBlocker_ZH-Hant.zip > WeaponUseCounterBlocker_ZH-Hant.zip.sha256
          sha256sum WeaponUseCounterBlocker_JA-JP.zip > WeaponUseCounterBlocker_JA-JP.zip.sha256
          sha256sum WeaponUseCounterBlocker_KO-KR.zip > WeaponUseCounterBlocker_KO-KR.zip.sha256

      - name: Check if release exists and delete it
        run: |
          if gh release view ${{ github.event.inputs.tag || github.ref_name }}; then
            gh release delete ${{ github.event.inputs.tag || github.ref_name }} --yes
          fi

      - name: Prepare release notes
        id: generate_notes
        run: |
          echo "### 版本下载 / Release Downloads" > release_notes.md
          echo "- **[WeaponUseCounterBlocker_EN-US.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.tag || github.ref_name }}/WeaponUseCounterBlocker_EN-US.zip)** （英文 / English）" >> release_notes.md
          echo "- **[WeaponUseCounterBlocker_ZH-Hans.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.tag || github.ref_name }}/WeaponUseCounterBlocker_ZH-Hans.zip)** （简体中文 / Simplified Chinese）" >> release_notes.md
          echo "- **[WeaponUseCounterBlocker_ZH-Hant.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.tag || github.ref_name }}/WeaponUseCounterBlocker_ZH-Hant.zip)** （繁體中文 / Traditional Chinese）" >> release_notes.md
          echo "- **[WeaponUseCounterBlocker_JA-JP.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.tag || github.ref_name }}/WeaponUseCounterBlocker_JA-JP.zip)** （日本語 / Japanese）" >> release_notes.md
          echo "- **[WeaponUseCounterBlocker_KO-KR.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.tag || github.ref_name }}/WeaponUseCounterBlocker_KO-KR.zip)** （한국인 / Korean）" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 更新日志 / Changelogs" >> release_notes.md
          if [ -f CHANGELOGS.md ]; then
            cat CHANGELOGS.md >> release_notes.md
          else
            echo "未找到CHANGELOGS.md文件 / CHANGELOGS.md file not found." >> release_notes.md
          fi
          echo "### 文件校验 / Checksums" >> release_notes.md
          echo "- \`WeaponUseCounterBlocker_EN-US.zip\` SHA-256: $(cut -d ' ' -f1 WeaponUseCounterBlocker_EN-US.zip.sha256)" >> release_notes.md
          echo "- \`WeaponUseCounterBlocker_ZH-Hans.zip\` SHA-256: $(cut -d ' ' -f1 WeaponUseCounterBlocker_ZH-Hans.zip.sha256)" >> release_notes.md
          echo "- \`WeaponUseCounterBlocker_ZH-Hant.zip\` SHA-256: $(cut -d ' ' -f1 WeaponUseCounterBlocker_ZH-Hant.zip.sha256)" >> release_notes.md
          echo "- \`WeaponUseCounterBlocker_JA-JP.zip\` SHA-256: $(cut -d ' ' -f1 WeaponUseCounterBlocker_JA-JP.zip.sha256)" >> release_notes.md
          echo "- \`WeaponUseCounterBlocker_KO-KR.zip\` SHA-256: $(cut -d ' ' -f1 WeaponUseCounterBlocker_KO-KR.zip.sha256)" >> release_notes.md
          echo "### 打包时间 / Build Time" >> release_notes.md
          echo "- $(date)" >> release_notes.md

      - name: Create GitHub Release
        id: create_release
        run: |
          gh release create ${{ github.event.inputs.tag || github.ref_name }} *.zip --title "${{ github.event.inputs.tag || github.ref_name }} Release" --notes-file release_notes.md

      - name: Commit changes
        run: |
          git config --local user.email "dzxrly2@gmail.com"
          git config --local user.name "dzxrly2"
          git add .
          git commit -m ":bookmark: 从 Github Action 构建并推送更新"
          git push -f origin HEAD:main
